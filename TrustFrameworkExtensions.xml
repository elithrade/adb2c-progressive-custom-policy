<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" 
  PolicySchemaVersion="0.3.0.0" 
  TenantId="progressiveb2c.onmicrosoft.com" 
  PolicyId="B2C_1A_TrustFrameworkExtensions" 
  PublicPolicyUri="http://progressiveb2c.onmicrosoft.com/B2C_1A_TrustFrameworkExtensions">
  
  <BasePolicy>
    <TenantId>progressiveb2c.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkLocalization</PolicyId>
  </BasePolicy>

  <BuildingBlocks>
    <!-- Adding a new custom claim -->
    <ClaimsSchema>
      <ClaimType Id="extension_LoyaltyNumber">
        <DisplayName>Loyalty-Number</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Loyalty number from membership card</UserHelpText>
        <!-- Used for user data collection -->
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="extension_HelloMessage">
        <DisplayName>Hello-Message</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
    </ClaimsSchema>
  </BuildingBlocks>

  <ClaimsProviders>

    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
         <TechnicalProfile Id="login-NonInteractive">
          <Metadata>
            <Item Key="client_id">25c59c27-f47b-4c1d-946b-0550c20f6c72</Item>
            <Item Key="IdTokenAudience">3d66af36-9b1c-4dff-9a52-c6371578d8fd</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="client_id" DefaultValue="25c59c27-f47b-4c1d-946b-0550c20f6c72" />
            <InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="3d66af36-9b1c-4dff-9a52-c6371578d8fd" />
          </InputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <!-- Adding a new claim provider, a self asserted technical profile to collect loyalty number from user interface -->
    <ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>
        <!-- Defined in TrustFrameworkBase.xml -->
        <TechnicalProfile Id="SelfAsserted-ProfileUpdate">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_LoyaltyNumber" Required="true"/>
            <OutputClaim ClaimTypeReferenceId="extension_HelloMessage" Required="true"/>
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <!-- Adding a new claim provider that extends AAD-Common technical profile defined in the base -->
    <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>
        <!-- Defined in TrustFrameworkBase.xml -->
        <TechnicalProfile Id="AAD-Common">
        <!-- Extend AAD-Comment technical profile -->
          <Metadata>
            <!-- Allow this technical profile to work with custom claim -->
            <!-- Object ID and client ID of the b2c-extension-app, used by ADB2C to store user data -->
            <Item Key="ApplicationObjectId">86d63b87-1a4e-4095-8028-c8e19ac3d4c2</Item>
            <Item Key="ClientId">99cbd9db-6657-4dc7-81c9-47398aa2de4d</Item>
          </Metadata>
        </TechnicalProfile>
        <!-- Using existing technical profile defined in TrustFrameworkBase.xml -->
        <!-- Persist the custom claim in -->
        <TechnicalProfile Id="AAD-UserWriteProfileUsingObjectId">
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="extension_LoyaltyNumber"/>
            <PersistedClaim ClaimTypeReferenceId="extension_HelloMessage"/>
          </PersistedClaims>
        </TechnicalProfile>
        <!-- Using existing technical profile defined in TrustFrameworkBase.xml -->
        <!-- Reads the custom claim back out -->
        <TechnicalProfile Id="AAD-UserReadUsingObjectId">
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_LoyaltyNumber"/>
            <OutputClaim ClaimTypeReferenceId="extension_HelloMessage"/>
          </OutputClaims>
        </TechnicalProfile>

        <TechnicalProfile Id="CallHelloWorldApi">
          <DisplayName>Calling external endpoint to get response and add response to token</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
              <!-- The ServiceUrl represents the API endpoint. Its value -->
              <Item Key="ServiceUrl">https://helloworld-fa.azurewebsites.net/api/helloworld</Item>
              <!-- SendClaimsIn specifies how the input claims are sent to the RESTful claims provider. Possible values: Body (default), Form, Header, Url or QueryString -->
              <!-- When you use Body, such as in this article, you invoke the POST HTTP verb -->
              <Item Key="SendClaimsIn">Body</Item>
              <!-- AuthenticationType specifies the type of authentication that the RESTful claims provider performs. -->
              <Item Key="AuthenticationType">None</Item>
              <!-- Our RESTful claims provider calls an unprotected endpoint, so we set our AuthenticationType to None. If you set authentication type to Bearer, you need to add a CryptographicKeys element, which specifies the storage for your access token. -->
              <Item Key="AllowInsecureAuthInProduction">true</Item>
          </Metadata>
          <InputClaims>
              <!-- The PartnerClaimType attribute in the InputClaim specifies how you receive your data in the API. -->
              <!-- Send givenName claim to API -->
              <InputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="name" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="extension_HelloMessage" PartnerClaimType="greeting" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

  </ClaimsProviders>

  <UserJourneys>
    <UserJourney Id="SignUpOrSignInProgressive">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
          <ClaimsProviderSelections>
            <ClaimsProviderSelection ValidationClaimsExchangeId="LocalAccountSigninEmailExchange" />
          </ClaimsProviderSelections>
          <ClaimsExchanges>
            <ClaimsExchange Id="LocalAccountSigninEmailExchange" TechnicalProfileReferenceId="SelfAsserted-LocalAccountSignin-Email" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SignUpWithLogonEmailExchange" TechnicalProfileReferenceId="LocalAccountSignUpWithLogonEmail" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <!-- This step reads any user attributes that we may not have received when in the token. -->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadWithObjectId" TechnicalProfileReferenceId="AAD-UserReadUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <!-- Before sending the claim, we need to check if the custom claim extension_LoyaltyNumber already exists -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>extension_LoyaltyNumber</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <!-- Claim defined in TrustFrameworkBase.xml, tells us if the user is a newly created one -->
              <Value>newUser</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="ProfileUpdateExchange" TechnicalProfileReferenceId="SelfAsserted-ProfileUpdate"/>
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Calling HTTP API request technical profile -->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="ExternalAPIExchange" TechnicalProfileReferenceId="CallHelloWorldApi" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <OrchestrationStep Order="6" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney>
  </UserJourneys>
</TrustFrameworkPolicy>
